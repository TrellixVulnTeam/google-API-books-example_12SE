{"ast":null,"code":"import React, { useState } from \"react\";\n\nconst Search = props => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchInputChanges = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  };\n\n  const callSearchFunction = e => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    onChange: handleSearchInputChanges,\n    type: \"text\",\n    onKeyUp: callSearchFunction\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onClick: callSearchFunction,\n    type: \"submit\",\n    value: \"SEARCH\"\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/wamp64/www/my-app/apps/my-app/src/components/search.tsx"],"names":["React","useState","Search","props","searchValue","setSearchValue","handleSearchInputChanges","e","target","value","resetInputField","callSearchFunction","preventDefault","search"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMK,wBAAwB,GAAIC,CAAD,IAAO;AACtCF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAFD;;AAIA,QAAMM,kBAAkB,GAAIJ,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,KAAK,CAACU,MAAN,CAAaT,WAAb;AACAM,IAAAA,eAAe;AAChB,GAJD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC;AAAhB,kBACE;AACE,IAAA,KAAK,EAAEN,WADT;AAEE,IAAA,QAAQ,EAAEE,wBAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,OAAO,EAAEK;AAJX,IADF,eAOE;AAAO,IAAA,OAAO,EAAEA,kBAAhB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAkD,IAAA,KAAK,EAAC;AAAxD,IAPF,CADJ;AAWD,CA5BD;;AA8BA,eAAeT,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  \r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\">\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleSearchInputChanges}\r\n          type=\"text\"\r\n          onKeyUp={callSearchFunction}\r\n        />\r\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}