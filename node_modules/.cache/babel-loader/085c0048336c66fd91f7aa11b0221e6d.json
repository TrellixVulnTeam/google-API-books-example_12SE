{"ast":null,"code":"import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const random_boolean = Math.random() >= 0.5;\n  const [inputText, setInputText] = useState(\"\");\n  const [historyList, setHistoryList] = useState([]);\n  const [isloading, setIsloading] = useState(random_boolean === true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsloading(false);\n    }, 2000);\n  });\n  return isloading ? /*#__PURE__*/React.createElement(\"div\", null, \"isLoading\") : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => {\n      setInputText(e.target.value);\n      setHistoryList([...historyList, e.target.value]);\n    },\n    placeholder: \"Enter Some Text\"\n  }), /*#__PURE__*/React.createElement(\"br\", null), inputText, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"ul\", null, historyList.map((key, value) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: value\n    }, key);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/my-app/apps/my-app/src/app/app.tsx"],"names":["React","useState","useEffect","App","random_boolean","Math","random","inputText","setInputText","historyList","setHistoryList","isloading","setIsloading","setTimeout","e","target","value","map","key"],"mappings":"AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA4BC,SAA5B,QAA6C,OAA7C;;AAUA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,cAAc,GAAGC,IAAI,CAACC,MAAL,MAAiB,GAAxC;AACA,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,SAAD,EAAWC,YAAX,IAA2BX,QAAQ,CAACG,cAAc,KAAK,IAApB,CAAzC;AAEAF,EAAAA,SAAS,CAAE,MAAI;AACbW,IAAAA,UAAU,CAAE,MAAI;AACdD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAER,IAFQ,CAAV;AAGD,GAJQ,CAAT;AAKA,SAAOD,SAAS,gBAAG,6CAAH,gBAA0B,8CACzC;AACA,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACZN,MAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACAN,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBK,CAAC,CAACC,MAAF,CAASC,KAA1B,CAAD,CAAd;AACD,KAJJ;AAMC,IAAA,WAAW,EAAC;AANb,IADyC,eAOR,+BAPQ,EAQvCT,SARuC,eAQ7B,+BAR6B,eASxC,+BATwC,eAUxC,+BAVwC,eAWxC,gCAEEE,WAAW,CAACQ,GAAZ,CAAgB,CAACC,GAAD,EAAMF,KAAN,KAAe;AAAC,wBAAO;AAAK,MAAA,GAAG,EAAEA;AAAV,OAAkBE,GAAlB,CAAP;AAAqC,GAArE,CAFF,CAXwC,CAA1C;AAmBD,CA/BD;;AAiCA,eAAef,GAAf","sourcesContent":["import React , { useState , useEffect } from 'react';\nimport menu from  \"../app/menu\";\n\nimport styled from 'styled-components';\n\nimport { ReactComponent as Logo } from './logo.svg';\nimport star from './star.svg';\n\n\n\nconst App = () => {\n\n  const random_boolean = Math.random() >= 0.5;\n  const [inputText,setInputText] = useState(\"\");\n  const [historyList, setHistoryList] = useState([]);\n  const [isloading,setIsloading] = useState(random_boolean === true);\n\n  useEffect( ()=>{\n    setTimeout( ()=>{\n      setIsloading(false);\n    },2000);\n  });\n  return isloading ? <div>isLoading</div> : <div> \n   <input \n   onChange={(e) => {\n        setInputText(e.target.value);\n        setHistoryList([...historyList, e.target.value]);\n      }\n    }\n    placeholder=\"Enter Some Text\" /><br/>\n    {inputText}<br/>\n    <hr/>\n    <br/>\n    <ul>\n      {\n      historyList.map((key, value) =>{return <div key={value}>{key}</div>;})\n      }\n    </ul>\n    \n    \n </div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}