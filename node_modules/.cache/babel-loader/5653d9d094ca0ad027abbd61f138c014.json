{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Header from \"./header\";\nimport Book from \"./book\";\nimport Search from \"./search\";\nimport '../app/app.css';\nconst BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [books, setBooks] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    fetch(BOOKS_API_URL).then(response => response.json()).then(jsonResponse => {\n      console.log(jsonResponse);\n      setBooks(jsonResponse.items);\n      setLoading(false);\n    });\n  }, []);\n\n  const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURI(searchValue)}`).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        console.log(jsonResponse);\n        setBooks(jsonResponse.items);\n        setLoading(false);\n      } else {\n        setErrorMessage(jsonResponse.Error);\n        setLoading(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\"\n  }, /*#__PURE__*/React.createElement(Header, {\n    text: \"HOOKED\"\n  }), /*#__PURE__*/React.createElement(Search, {\n    search: search\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App-intro\"\n  }, \"Sharing a few of our favourite books\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"books\"\n  }, loading && !errorMessage ? /*#__PURE__*/React.createElement(\"span\", null, \"loading...\") : errorMessage ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\"\n  }, errorMessage) : books.map((book, index) => /*#__PURE__*/React.createElement(Book, {\n    key: `${index}-${book.volumeInfo.title}`,\n    book: book\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/my-app/apps/my-app/src/components/app.tsx"],"names":["React","useState","useEffect","Header","Book","Search","BOOKS_API_URL","App","loading","setLoading","books","setBooks","errorMessage","setErrorMessage","fetch","then","response","json","jsonResponse","console","log","items","search","searchValue","encodeURI","Response","Error","map","book","index","volumeInfo","title"],"mappings":"AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,gBAAP;AAWA,MAAMC,aAAa,GAAG,6CAAtB;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AAEEC,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,KAAK,CAACR,aAAD,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAP,MAAAA,QAAQ,CAACO,YAAY,CAACG,KAAd,CAAR;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH;AAOD,GARU,EAQR,EARQ,CAAT;;AAUA,QAAMa,MAAM,GAAGC,WAAW,IAAI;AAC9Bd,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,KAAK,CAAE,iDAAgDU,SAAS,CAACD,WAAD,CAAc,EAAzE,CAAL,CACGR,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,UAAIA,YAAY,CAACO,QAAb,KAA0B,MAA9B,EAAsC;AACpCN,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAP,QAAAA,QAAQ,CAACO,YAAY,CAACG,KAAd,CAAR;AACAZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD,MAIO;AACLI,QAAAA,eAAe,CAACK,YAAY,CAACQ,KAAd,CAAf;AACAjB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAXH;AAYA,GAfA;;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC;AAAf,kBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,IADD,eAEC,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEa;AAAhB,IAFD,eAGC;AAAG,IAAA,SAAS,EAAC;AAAb,4CAHD,eAIC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGd,OAAO,IAAI,CAACI,YAAZ,gBACA,+CADA,GAEIA,YAAY,gBACf;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BA,YAA/B,CADe,GAGfF,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAG,GAAEA,KAAM,IAAGD,IAAI,CAACE,UAAL,CAAgBC,KAAM,EAA7C;AAAgD,IAAA,IAAI,EAAEH;AAAtD,IADF,CANJ,CAJD,CADD;AAkBH,CAnDD;;AAsDA,eAAerB,GAAf","sourcesContent":["import React , { useState, useEffect } from 'react';\n\nimport Header from \"./header\";\nimport Book from \"./book\";\nimport Search from \"./search\";\nimport '../app/app.css';\nimport styled from 'styled-components';\n\nimport { ReactComponent as Logo } from './app/logo.svg';\nimport star from './app/star.svg';\n\n\n\n\n\n\nconst BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\n\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [books, setBooks] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n    fetch(BOOKS_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => { \n        console.log(jsonResponse);\n        setBooks(jsonResponse.items);\n        setLoading(false);\n      });\n  }, []);\n\n    const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURI(searchValue)}`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          console.log(jsonResponse);\n          setBooks(jsonResponse.items);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  \t};\n\n    \n    return (\n     <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite books</p>\n      <div className=\"books\">\n        {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          books.map((book, index) => (\n            <Book key={`${index}-${book.volumeInfo.title}`} book={book} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}